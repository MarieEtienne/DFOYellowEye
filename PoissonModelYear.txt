model
{
  for( indYear in 1:nYear) 
  {
    
    for(indGear in 1:nGear) 
    {
      for (indFish in 1:nFish) 
      {
        ## logit of probability of presence 
        logit(py[indYear, indGear, indFish]) <- betay[indYear] + betag[indGear] + betaf[indFish]  
        ## log on average abundance
        la.mu[indYear, indGear, indFish]<-alphay[indYear] + alphag[indGear] + alphaf[indFish]
        a.mu[indYear, indGear, indFish] <-exp(la.mu[indYear, indGear, indFish])			##mu in lognormal distribution is log space as logx=mu
        predcpue[indYear, indGear, indFish]<-py[indYear, indGear, indFish]*a.mu[indYear, indGear, indFish]		
      }
    }
    
    ##abundance indices per year
    logit(pcy[indYear]) <- betay[indYear]  #this generates new probabilites (without the ba term)
    la.cmu[indYear]<-alphay[indYear]	   
    a.cmu[indYear] <-exp(la.cmu[indYear])			
    predccpue[indYear]<-pcy[indYear]*a.cmu[indYear]	
    
  }
  
for (i in 1: nPres) 
  {
    pres[i] ~ dbin(py[presYear[i],presGear[i],presFish[i]],presYsets[i])    #occurrences of catches with fish present
  }
  
  for (j in 1: nCpue) 
  {
    ## Negative binomial model to account for counts and overdispersion
    ## Parametrising to avoid auto correlation
    ## a.mu is the expected mean
    ## r the dispersion parameter
    ## p  the probability of success
    ## Y~dnegbin(p,r), E(Y)=r p /(1-p), var(Y) = r p / (1-p)^2
     cpue.p[j] <- a.mu[cpueYear[j],cpueGear[j],cpueFish[j]]/(r+a.mu[cpueYear[j],cpueGear[j],cpueFish[j]])
     cpue[j] ~ dnegbin( cpue.p[j] , r )
   }
  
  
  #PRIORS
  r ~ dgamma(0.01,0.01)
   
  for (indYear in 1:nYear) {
    betay[indYear] ~ dnorm( 0.0,1.0E-6)
    alphay[indYear] ~ dnorm( 0.0,1.0E-6)
  }
  for (indGear in 1:nGear) {
    betag[indGear] ~ dnorm( 0.0,1.0E-6)
    alphag[indGear] ~ dnorm( 0.0,1.0E-6)
  }
  for (indFish in 1:nFish) {
    betaf[indFish] ~ dnorm( 0.0,1.0E-6)
    alphaf[indFish] ~ dnorm( 0.0,1.0E-6)
  }
}
